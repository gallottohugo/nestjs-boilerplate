{
  "name": "nestjs-boilerplate",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "worker:start:dev": "nest start --config nest-cli-worker.json --watch",
    "worker:start:prod": "node worker.js",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest --detectOpenHandles",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json --detectOpenHandles",
    "typeorm": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli -d ./src/ormconfig.ts",
    "migration:create": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli migration:create ./src/migrations/$npm_config_name",
    "migration:generate": "npm run typeorm -- migration:generate ./src/migrations/$npm_config_name",
    "migration:run": "npm run typeorm -- migration:run",
    "migration:run:prod": "node_modules/typeorm/cli.js -d ormconfig.js migration:run",
    "migration:run:test": "dotenv -e .env.teste2e npm run typeorm -- migration:run",
    "migration:revert": "npm run typeorm -- migration:revert",
    "docker:test": "docker-compose --file docker-compose.integration-tests.yml up --build --abort-on-container-exit -V",
    "docker:start": "docker-compose up --build --remove-orphans",
    "docker:typeorm": "docker exec -it nestjs-boilerplate_web_1 node_modules/typeorm/cli.js -d ormconfig.js",
    "docker:migration:run": "docker exec -it nestjs-boilerplate_web_1 npm run migration:run:prod",
    "repl": "npm run build && npm run start -- --entryFile repl",
    "db:dev:up": "docker-compose -f docker-compose.dev.yml up -d",
    "db:test:rm": "docker-compose --file docker-compose.test.yml rm -s -f -v",
    "db:test:up": "docker-compose --file docker-compose.test.yml up -d",
    "db:test:restart": "npm run db:test:rm && npm run db:test:up && sleep 1 && dotenv -e .env.teste2e -- npm run migration:run:test",
    "pretest:e2e:full": "npm run db:test:restart",
    "test:e2e:full": "dotenv -e .env.teste2e -- jest --no-cache --config ./test/jest-e2e.json --detectOpenHandles"
  },
  "dependencies": {
    "@nestjs/axios": "^0.1.0",
    "@nestjs/bull": "^0.6.1",
    "@nestjs/common": "^9.0.0",
    "@nestjs/config": "^2.2.0",
    "@nestjs/core": "^9.0.0",
    "@nestjs/platform-express": "^9.0.0",
    "@nestjs/typeorm": "^9.0.1",
    "bull": "^4.9.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.13.2",
    "crypto-js": "^4.1.1",
    "dd-trace": "^3.5.0",
    "joi": "^17.6.0",
    "nestjs-ddtrace": "^3.0.2",
    "nestjs-pino": "^3.1.1",
    "pg": "^8.8.0",
    "pino-http": "^8.2.0",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.2.0",
    "typeorm": "^0.3.9"
  },
  "devDependencies": {
    "@golevelup/ts-jest": "^0.3.3",
    "@nestjs/cli": "^9.0.0",
    "@nestjs/schematics": "^9.0.0",
    "@nestjs/testing": "^9.0.0",
    "@types/bull": "^3.15.9",
    "@types/crypto-js": "^4.1.1",
    "@types/express": "^4.17.13",
    "@types/jest": "28.1.8",
    "@types/node": "^16.0.0",
    "@types/supertest": "^2.0.11",
    "@typescript-eslint/eslint-plugin": "^5.0.0",
    "@typescript-eslint/parser": "^5.0.0",
    "dotenv-cli": "^6.0.0",
    "eslint": "^8.0.1",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^4.0.0",
    "jest": "28.1.3",
    "prettier": "^2.3.2",
    "source-map-support": "^0.5.20",
    "supertest": "^6.1.3",
    "ts-jest": "28.0.8",
    "ts-loader": "^9.2.3",
    "ts-node": "^10.0.0",
    "tsconfig-paths": "4.1.0",
    "typescript": "^4.7.4"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
